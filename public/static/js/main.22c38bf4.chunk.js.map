{"version":3,"sources":["logos/elon.png","logos/download (1).png","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Home.js","components/LaunchDetails.js","components/RocketDetails.js","components/RocketItem.js","components/Rockets.js","components/ShipItem.js","components/Ships.js","components/ShipDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","classNames","text-success","text-danger","text-warning","dist_default","format","Link","to","concat","MissionKey","props","success","fail","progress","LAUNCHES_QUERY","gql","_templateObject","Launches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","components_MissionKey","react_apollo_esm","query","loading","error","data","console","log","launches","map","item","components_LaunchItem","Component","Home","class","src","elon","alt","style","width","display","margin","paddingTop","LAUNCH_QUERY","LaunchDetails_templateObject","LaunchDetails","match","params","parseInt","variables","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","ROCKET_QUERY","RocketDetails_templateObject","RocketDetails","_data$rocket","active","stages","first_flight","country","cost_per_launch","success_rate_pct","wikipedia","description","height","mass","second_stage","first_stage","kg","meters","href","target","reusable","fuel_amount_tons","burn_time_sec","RocketItem","_ref$rocket","ROCKETS_QUERY","Rockets_templateObject","Rockets","rockets","components_RocketItem","ShipItem","_ref$ship","ship","ship_id","ship_name","ship_type","year_built","home_port","status","weight_lbs","weight_kg","url","image","position","SHIPS_QUERY","Ships_templateObject","Ships","ships","components_ShipItem","SHIP_QUERY","ShipDetails_templateObject","ShipDetails","_data$ship","_data$ship$position","latitude","longitude","client","ApolloClient","uri","App","BrowserRouter","logo","padding","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22c38bf4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/elon.1f2aeaff.png\";","module.exports = __webpack_public_path__ + \"static/media/download (1).c5662112.png\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\n\nconst LaunchItem = ({\n  launch: { flight_number, mission_name, launch_date_local, launch_success }\n}) => {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4>\n            Mission:{\" \"}\n            <span\n              className={classNames({\n                \"text-success\": launch_success === true,\n                \"text-danger\": launch_success === false,\n                \"text-warning\": launch_success === null\n              })}\n            >\n              {mission_name}\n            </span>\n          </h4>\n          <p>\n            Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\n            Launch Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LaunchItem;\n","import React from 'react'\n\nconst MissionKey = (props) => {\n    return (\n        <div className=\"my-5\">\n            <p>\n                <span className=\"px-3 mr-2 bg-success\"/> - {props.success}\n                </p>\n                <p>\n                <span className=\"px-3 mr-2 bg-danger\"/> - {props.fail}\n                </p>\n                <p>\n                <span className=\"px-3 mr-2 bg-warning\" />\n                - {props.progress}\n              </p>\n        </div>\n    )\n}\n\nexport default MissionKey;","import React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport LaunchItem from \"./LaunchItem\";\nimport MissionKey from \"./MissionKey\";\nimport { Link } from \"react-router-dom\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\nexport class Launches extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Link to=\"/\" className=\"btn btn-secondary\">\n          Back\n        </Link>\n        <h1 className=\"display-4 my-3\">Launches</h1>\n        <MissionKey fail= 'Fail' success= 'Success' progress= 'Awaiting' />\n        <Query query={LAUNCHES_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log(error);\n            return (\n              <Fragment>\n                {data.launches.map(item => (\n                  <LaunchItem key={item.flight_number} launch={item} />\n                ))}\n              </Fragment>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\n\nexport default Launches;\n","import React,{Fragment} from 'react'\nimport { Link } from 'react-router-dom'\nimport elon from \"../logos/elon.png\";\nconst Home = () => {\n    return (\n        <Fragment>      \n            <ul class = \"nav justify-content-around text-uppercase\">\n             <li class=\"nav-item \">\n            <Link to='/launches'> <h3 class=\"nav-link \">Launches</h3></Link>\n            </li>\n            <li class=\"nav-item\">\n            <Link to='/rockets'> <h3 class=\"nav-link\">Rockets</h3></Link>\n            </li>\n            <li class=\"nav-item\">\n            <Link to='/ships'> <h3 class=\"nav-link\">Ships</h3></Link>\n            </li>\n\n</ul>\n\n            <img\n              src={elon}\n              alt=\"SpaceX\"\n              style={{ width: 200, display: \"block\", margin: \"auto\",\n              paddingTop: \"8rem\" }}\n            />\n        </Fragment>\n    )\n}\n\nexport default Home","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\n/* const launch_success = ()=>{\n   if(launch_success === true){\n     return 'Yes'\n   } else if(launch_success === false){\n     return 'No'\n   }else return 'waiting'\n}\n */\nclass LaunchDetails extends Component  {\n    render() {\n    let { flight_number } = this.props.match.params\n    flight_number = parseInt(flight_number)\n    return (\n        <Fragment>\n             <Link to=\"/\" className=\"btn btn-secondary\">\n                    Back\n                  </Link>\n          <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n            {({ loading, error, data }) => {\n              if (loading) return <h4>Loading...</h4>;\n              if (error) console.log(error);\n  \n              const {\n                mission_name,\n                flight_number,\n                launch_year,\n                launch_success,\n                rocket: { rocket_id, rocket_name, rocket_type }\n              } = data.launch;\n  \n              return (\n                <div>\n                  <h1 className=\"display-4 my-3\">\n                    <span className=\"text-dark\">Mission:</span> {mission_name}\n                  </h1>\n                  <h4 className=\"mb-3\">Launch Details</h4>\n                  <ul className=\"list-group text-white\">\n                    <li className=\"list-group-item\">\n                      Flight Number: {flight_number}\n                    </li>\n                    <li className=\"list-group-item\">\n                      Launch Year: {launch_year}\n                    </li>\n                    <li className=\"list-group-item\">\n                      Launch Successful:{' '}\n                      <span\n                        className={classNames({\n                          'text-success': launch_success===true,\n                          'text-danger': launch_success ===false,\n                          'text-warning': launch_success ===null \n                        })}\n                      >\n                        \n              \n\n                       {(() => {\n        switch (launch_success) {\n          case true:   return \"Yes\";\n          case false: return \"No\";\n          case null: return \"Awaiting\";\n          default:      return \" \";\n        }\n      })()}\n                         \n               \n                      </span>\n                    </li>\n                  </ul>\n  \n                  <h4 className=\"my-3\">Rocket Details</h4>\n                  <ul className=\"list-group text-white\">\n                    <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                    <li className=\"list-group-item\">\n                      Rocket Name: {rocket_name}\n                    </li>\n                    <li className=\"list-group-item\">\n                      Rocket Type: {rocket_type}\n                    </li>\n                  </ul>\n                  <hr />\n                  <Link to=\"/\" className=\"btn btn-secondary\">\n                    Back\n                  </Link>\n                </div>\n              );\n            }}\n          </Query>\n        </Fragment>\n      );\n    }\n  }\nexport default LaunchDetails;\n\n","import React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport MissionKey from \"./MissionKey\";\n\nconst ROCKET_QUERY = gql`\n  query RocketQuery($rocket_id: String!) {\n    rocket(rocket_id: $rocket_id) {\n      rocket_id\n      active\n      stages\n      first_flight\n      country\n      cost_per_launch\n      success_rate_pct\n      wikipedia\n      description\n      rocket_name\n      height {\n        meters\n        feet\n      }\n      mass {\n          kg\n          lb\n      }\n      second_stage {\n        reusable\n        fuel_amount_tons\n        burn_time_sec\n      }\n      first_stage {\n        reusable\n        fuel_amount_tons\n        burn_time_sec\n      }\n    }\n  }\n`;\n\nclass RocketDetails extends Component {\n  render() {\n    let  {rocket_id}  = this.props.match.params;\n    return (\n      <Fragment>\n<Query query={ROCKET_QUERY} variables={ {rocket_id} }>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log('error',error);\n            const {\n              active,\n              stages,\n              first_flight,\n              country,\n              cost_per_launch,\n              success_rate_pct,\n              wikipedia,\n              description,\n              rocket_name,\n              height,\n              mass,\n              second_stage,\n              first_stage\n            } = data.rocket;\n\n            return (\n              <div>\n                <Link to=\"/rockets\" className=\"btn btn-secondary  my-4\">\n                  Back\n                </Link>\n                <MissionKey success='Active' fail= 'Non Active' progress ='Awaiting'/>\n                <h1 className=\"display-4 my-3\">\n                  <span className=\"text-dark\">Rocket Name:</span> {}\n                  <span\n                        className={classNames({\n                          'text-success': active,\n                          'text-danger': !active\n                        })}\n                      >\n                        {active ? rocket_name : rocket_name}\n                      </span>\n                </h1>\n                <h4 className=\"mb-3\">Rocket Details</h4>\n                <ul className=\"list-group text-white\">\n                  <li className=\"list-group-item\" >\n                    Description: {description}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Year: {first_flight}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Year: {country}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Mas: {mass.kg}{\" kg \"}{mass.kg}{\" lb \"}\n                  </li>\n                  <li className=\"list-group-item\">\n                     Cost Per Launch: {cost_per_launch}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Height: {height.meters}{\" meters \"}{height.meters}{\" feet \"}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Success Rate Pct: {success_rate_pct}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Wikipedia: <a href={wikipedia} target=\"blank\">Wikipedia</a>\n                  </li>\n                  <li className=\"list-group-item\">\n                    Stages: {stages}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Active:{\" \"}\n                    <span\n                      className={classNames({\n                        \"text-success\": active,\n                        \"text-danger\": !active\n                      })}\n                    >\n                      {active ? \"Yes\" : \"No\"}\n                    </span>\n                     \n                  </li>\n                </ul>\n                <h1 className=\"display-4 my-3\">Stage One</h1>\n                <ul className=\"list-group text-white\">\n                  <li className=\"list-group-item\">\n                  Reusable: {first_stage.reusable? 'Yes':'No'}\n                  </li>\n                  <li className=\"list-group-item\">\n                  Fuel Amount Tons: {first_stage.fuel_amount_tons} {\" tons\"}\n                  </li>\n                  <li className=\"list-group-item\">\n                  Burn Times Sec: {first_stage.burn_time_sec} {\" sec \"}\n                  </li>\n                </ul>\n                <h1 className=\"display-4 my-3\">Stage Two</h1>\n                <ul className=\"list-group text-white\">\n                  <li className=\"list-group-item\">\n                  Reusable: {second_stage.reusable ? \"Yes\" : \"No\"}\n                  </li>\n                  <li className=\"list-group-item\">\n                  Fuel Amount Tons: {second_stage.fuel_amount_tons} {\" tons\"}\n                  </li>\n                  <li className=\"list-group-item\">\n                  Burn Times Sec: {second_stage.burn_time_sec} {\" sec \"}\n                  </li>\n                </ul>\n                <hr />\n                <Link to=\"/\" className=\"btn btn-secondary\">\n                  Back\n                </Link>\n              </div>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\nexport default RocketDetails;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\n\nconst RocketItem = ({\n  rocket: {\n    rocket_id,\n    active,\n    stages,\n    first_flight,\n    country,\n    cost_per_launch,\n    success_rate_pct,\n    wikipedia,\n    description,\n    rocket_name,\n    height,\n    mass,\n    second_stage,\n    first_stage\n  }\n}) => {\n\n  return (\n      <div className=\"card card-body mb-3\">\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <h4>\n              Mission:{\" \"}\n              <span\n                className={classNames({\n                  \"text-success\": active,\n                  \"text-danger\": !active\n                })}\n              >\n                {rocket_name}\n              </span>\n            </h4>\n            <p>\n              Date: <Moment format=\"YYYY-MM-DD HH:mm\">{first_flight}</Moment>\n            </p>\n          </div>\n          <div className=\"col-md-3\">\n            <Link to={`/rocket/${rocket_id}`} className=\"btn btn-secondary\">\n              Rocket Details\n            </Link>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default RocketItem;\n","import React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport RocketItem  from './RocketItem'\nimport { Link } from 'react-router-dom';\nimport MissionKey from \"./MissionKey\";\n\nconst ROCKETS_QUERY = gql`\n  query RocketsQuery {\n    rockets {\n      rocket_id\n      active\n      stages\n      first_flight\n      country\n      cost_per_launch\n      success_rate_pct\n      wikipedia\n      description\n      rocket_name\n      height {\n        meters\n        feet\n      }\n      mass {\n          kg\n          lb\n      }\n      second_stage {\n        reusable\n        fuel_amount_tons\n        burn_time_sec\n      }\n      first_stage {\n        reusable\n        fuel_amount_tons\n        burn_time_sec\n      }\n    }\n  }\n`;\n\nclass Rockets extends Component {\n  render() {\n    return (\n      <Fragment>\n          <Link to=\"/\" className=\"btn btn-secondary my-4\">\n                  Back\n                </Link>\n                <MissionKey success='Active' fail= 'Non Active' progress='Awaiting'/>\n        <Query query={ROCKETS_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log(error);\n\n            return (\n              <Fragment>\n                {data.rockets.map(item => (\n                  <RocketItem key={item.rocket_id} rocket = {item}/>\n                ))}\n              </Fragment>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\n\nexport default Rockets;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nconst ShipItem = ({\n  ship: {\n    active,\n    ship_id,\n    ship_name,\n    ship_type,\n    year_built,\n    home_port,\n    status,\n    weight_lbs,\n    weight_kg,\n    url,\n    image,\n    position\n  }\n}) => {\n  return (\n      <div className=\"card card-body mb-3\">\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <h4>\n              Mission:{\" \"}\n              <span\n                className={classNames({\n                  \"text-success\": ship_id\n                })}\n              >\n                {ship_name}\n              </span>\n            </h4>\n \n          </div>\n          <div className=\"col-md-3\">\n            <Link to={`/ship/${ship_id}`} className=\"btn btn-secondary\">\n              Ship Details\n            </Link>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default ShipItem;\n","import React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport ShipItem  from './ShipItem'\nimport { Link } from 'react-router-dom';\n\n\n\nconst SHIPS_QUERY = gql`\n  query ShipsQuery {\n    ships {\n        ship_id,\n        ship_name,\n        ship_type,\n        year_built,\n        home_port,\n        status,\n        weight_lbs,\n        weight_kg,\n        url,\n        image,\n        position{\n            latitude,\n            longitude\n        }\n    }\n  }\n`;\n\n\nclass Ships extends Component {\n    render () {\n        return (\n            <Fragment>\n          <Link to=\"/\" className=\"btn btn-secondary my-4\">\n                  Back\n                </Link>\n        <Query query={SHIPS_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log(error);\n\n            return (\n              <Fragment>\n                {data.ships.map(item => (\n                  <ShipItem key={item.ship_id} ship = {item}/>\n                ))}\n              </Fragment>\n            );\n          }}\n        </Query>\n      </Fragment>\n        )\n    }\n}\n\nexport default Ships","import React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\n\n\nconst SHIP_QUERY = gql`\n  query ShipQuery($ship_id: String!) {\n    ship(ship_id: $ship_id) {\n        ship_id,\n        ship_name,\n        ship_type,\n        year_built,\n        home_port,\n        status,\n        weight_lbs,\n        weight_kg,\n        url,\n        image,\n        position{\n            latitude,\n            longitude\n        }\n    }\n  }\n`;\n\nclass ShipDetails extends Component {\n  render() {\n    let  {ship_id}  = this.props.match.params;\n    return (\n      <Fragment>\n<Query query={SHIP_QUERY} variables={ {ship_id} }>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log('error',error);\n            const {\n                ship_name,\n                ship_type,\n                year_built,\n                home_port,\n                status,\n                weight_lbs,\n                weight_kg,\n                url,\n                image,\n                position:{\n                    latitude,\n                    longitude\n                }\n            } = data.ship;\n            return (\n              <div>\n                <Link to=\"/ships\" className=\"btn btn-secondary  my-4\">\n                  Back\n                </Link>\n                <h4 className=\"mb-3\">Ship Details</h4>\n                <ul className=\"list-group text-white\">\n                <li className=\"list-group-item\" >\n                  Ship Name: {ship_name}\n                  </li>\n                  <li className=\"list-group-item\" >\n                  Ship Type: {ship_type}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Year Built: {year_built}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Home Port: {home_port}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Mas: {weight_kg}{\" kg \"}{weight_lbs}{\" lb \"}\n                  </li>\n                  <li className=\"list-group-item\">\n                     Status: {status}\n                  </li>\n                  <li className=\"list-group-item\">\n                  Url: <a href={url} target=\"blank\">Find Out More</a>\n                  </li>\n                  <li className=\"list-group-item\">\n                  Img: <a href={image} target=\"blank\">Image</a>\n                  </li>\n                  <li className=\"list-group-item\">\n                    Position: {\" latitude \"} {latitude} {\" longitude \"} {longitude}\n                  </li>\n                </ul>\n   \n                <hr />\n                <Link to=\"/ships\" className=\"btn btn-secondary\">\n                  Back\n                </Link>\n              </div>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\nexport default ShipDetails;\n","import React, { Component } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Launches from \"./components/Launches\";\nimport Home from \"./components/Home.js\";\nimport LaunchDetails from \"./components/LaunchDetails\";\nimport RocketDetails from \"./components/RocketDetails\";\nimport Rockets from \"./components/Rockets\";\nimport Ships from \"./components/Ships\";\nimport ShipDetails from \"./components/ShipDetails\";\nimport \"./App.css\";\nimport logo from \"./logos/download (1).png\";\n//\"http://localhost:4000/graphql\"\nconst client = new ApolloClient({\n  uri: \"/graphql\"\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <div className=\"container\">\n            <img\n              src={logo}\n              alt=\"SpaceX\"\n              style={{ width: 400, display: \"block\", margin: \"auto\",\n            padding:\"4rem\" }}\n            />\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/launches\" component={Launches} />\n            <Route\n              exact\n              path=\"/launch/:flight_number\"\n              component={LaunchDetails}\n            />\n            <Route exact path=\"/rockets\" component={Rockets} />\n            <Route exact path=\"/rocket/:rocket_id\" component={RocketDetails} />\n            <Route exact path=\"/ships\" component={Ships} /> \n            <Route exact path=\"/ship/:ship_id\" component={ShipDetails} />         </div>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}